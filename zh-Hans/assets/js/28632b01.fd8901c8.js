"use strict";(self.webpackChunkmaze_doc=self.webpackChunkmaze_doc||[]).push([[431],{644:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return g},metadata:function(){return d},toc:function(){return m},Default:function(){return p},ConfirmDialog:function(){return k},ScrollDialog:function(){return D},FullScreen:function(){return C},FullWidth:function(){return f},Draggable:function(){return T},default:function(){return v}});var o=n(7462),a=n(3366),i=n(7294),l=n(3905),s=n(6923),r=n(321),u=["components"],c={sidebar_position:3},g="Dialog \u5bf9\u8bdd\u6846",d={unversionedId:"components/Dialog",id:"components/Dialog",isDocsHomePage:!1,title:"Dialog \u5bf9\u8bdd\u6846",description:"Grid,",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/components/Dialog.mdx",sourceDirName:"components",slug:"/components/Dialog",permalink:"/maze-doc/zh-Hans/docs/components/Dialog",editUrl:"https://github.com/matozz/maze-doc/blob/master/docs/components/Dialog.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Text Field \u6587\u672c\u5b57\u6bb5",permalink:"/maze-doc/zh-Hans/docs/components/TextField"},next:{title:"Switch \u5f00\u5173",permalink:"/maze-doc/zh-Hans/docs/components/Switch"}},m=[{value:"Basic dialog",id:"basic-dialog",children:[],level:2},{value:"Confirm dialog",id:"confirm-dialog",children:[],level:2},{value:"Scrolling long content",id:"scrolling-long-content",children:[],level:2},{value:"Full-screen dialogs",id:"full-screen-dialogs",children:[],level:2},{value:"Full-width dialogs",id:"full-width-dialogs",children:[],level:2},{value:"Draggable Dialog",id:"draggable-dialog",children:[],level:2}],p=function(){var e=(0,i.useState)(!1),t=e[0],n=e[1];return(0,l.kt)(i.Fragment,null,(0,l.kt)(r.i,{mdxType:"Wrapper"},(0,l.kt)(s.Button,{variant:"outlined",onClick:function(){return n(!0)},mdxType:"Button"},"OPEN BASIC DIALOG"),(0,l.kt)(s.Dialog,{open:t,onClose:function(){console.log("Dialog Closed"),n(!1)},onBackdropClick:function(){return n(!1)},exitOnEsc:!0,mdxType:"Dialog"},(0,l.kt)(s.DialogTitle,{mdxType:"DialogTitle"},"Use Google's location service?"),(0,l.kt)(s.DialogContent,{mdxType:"DialogContent"},(0,l.kt)(s.DialogContentText,{mdxType:"DialogContentText"},"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.")),(0,l.kt)(s.DialogActions,{mdxType:"DialogActions"},(0,l.kt)(s.Button,{variant:"text",onClick:function(){return n(!1)},mdxType:"Button"},"DISAGREE"),(0,l.kt)(s.Button,{variant:"text",onClick:function(){return n(!1)},mdxType:"Button"},"AGREE")))))},k=function(){var e=(0,i.useState)(!1),t=e[0],n=e[1],o=(0,i.useState)(""),a=o[0],u=o[1],c=(0,i.useRef)(),g=(0,i.useCallback)((function(e){c.current=e.target.value}),[]);return(0,l.kt)(i.Fragment,null,(0,l.kt)(r.i,{mdxType:"Wrapper"},(0,l.kt)(s.Grid,{spacing:2,mdxType:"Grid"},(0,l.kt)(s.Button,{variant:"outlined",onClick:function(){return n(!0)},mdxType:"Button"},"DJ MAG VOTE 2022"),(0,l.kt)(s.Dialog,{open:t,onClose:function(){return console.log("Dialog Closed")},width:"350px",mdxType:"Dialog"},(0,l.kt)(s.DialogTitle,{mdxType:"DialogTitle"},"Best DJ in the world"),(0,l.kt)(s.DialogContent,{dividers:!0,mdxType:"DialogContent"},(0,l.kt)(s.RadioGroup,{name:"dj",size:"medium",orientation:"vertical",spacing:15,onChange:g,mdxType:"RadioGroup"},(0,l.kt)(s.Radio,{value:"Martin Garrix",label:"Martin Garrix",mdxType:"Radio"}),(0,l.kt)(s.Radio,{value:"Mike Williams",label:"Mike Williams",mdxType:"Radio"}),(0,l.kt)(s.Radio,{value:"Brooks",label:"Brooks",mdxType:"Radio"}))),(0,l.kt)(s.DialogActions,{mdxType:"DialogActions"},(0,l.kt)(s.Button,{variant:"text",onClick:function(){return n(!1)},mdxType:"Button"},"CANCEL"),(0,l.kt)(s.Button,{variant:"text",onClick:function(){u(c.current),n(!1)},mdxType:"Button"},"SUBMIT"))),(0,l.kt)(s.Label,{mdxType:"Label"},"Selection: ",a))))},D=function(){var e=(0,i.useState)(!1),t=e[0],n=e[1];return(0,l.kt)(i.Fragment,null,(0,l.kt)(r.i,{mdxType:"Wrapper"},(0,l.kt)(s.Button,{variant:"outlined",onClick:function(){return n(!0)},mdxType:"Button"},"SCROLL DIALOG"),(0,l.kt)(s.Dialog,{open:t,onClose:function(){return console.log("Dialog Closed")},onBackdropClick:function(){return n(!1)},mdxType:"Dialog"},(0,l.kt)(s.DialogTitle,{mdxType:"DialogTitle"},"Use Google's location service?"),(0,l.kt)(s.DialogContent,{dividers:!0,mdxType:"DialogContent"},(0,l.kt)(s.DialogContentText,{mdxType:"DialogContentText"},"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.")),(0,l.kt)(s.DialogActions,{mdxType:"DialogActions"},(0,l.kt)(s.Button,{variant:"text",onClick:function(){return n(!1)},mdxType:"Button"},"DISAGREE"),(0,l.kt)(s.Button,{variant:"text",onClick:function(){return n(!1)},mdxType:"Button"},"AGREE")))))},C=function(){var e=(0,i.useState)(!1),t=e[0],n=e[1];return(0,l.kt)(i.Fragment,null,(0,l.kt)(r.i,{mdxType:"Wrapper"},(0,l.kt)(s.Button,{variant:"outlined",onClick:function(){return n(!0)},mdxType:"Button"},"OPEN FULL-SCREEN DIALOG"),(0,l.kt)(s.Dialog,{open:t,onClose:function(){return console.log("Dialog Closed")},onBackdropClick:function(){return n(!1)},fullScreen:!0,mdxType:"Dialog"},(0,l.kt)(s.DialogTitle,{mdxType:"DialogTitle"},"Use Google's location service?"),(0,l.kt)(s.DialogContent,{mdxType:"DialogContent"},(0,l.kt)(s.DialogContentText,{mdxType:"DialogContentText"},"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running. Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.")),(0,l.kt)(s.DialogActions,{mdxType:"DialogActions"},(0,l.kt)(s.Button,{variant:"text",onClick:function(){return n(!1)},mdxType:"Button"},"DISAGREE"),(0,l.kt)(s.Button,{variant:"text",onClick:function(){return n(!1)},mdxType:"Button"},"AGREE")))))},f=function(){var e=(0,i.useState)(!1),t=e[0],n=e[1];return(0,l.kt)(i.Fragment,null,(0,l.kt)(r.i,{mdxType:"Wrapper"},(0,l.kt)(s.Button,{variant:"outlined",onClick:function(){return n(!0)},mdxType:"Button"},"OPEN FULL-WIDTH DIALOG"),(0,l.kt)(s.Dialog,{open:t,onClose:function(){return console.log("Dialog Closed")},onBackdropClick:function(){return n(!1)},fullWidth:!0,mdxType:"Dialog"},(0,l.kt)(s.DialogTitle,{mdxType:"DialogTitle"},"Use Google's location service?"),(0,l.kt)(s.DialogContent,{mdxType:"DialogContent"},(0,l.kt)(s.DialogContentText,{mdxType:"DialogContentText"},"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running. Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.")),(0,l.kt)(s.DialogActions,{mdxType:"DialogActions"},(0,l.kt)(s.Button,{variant:"text",onClick:function(){return n(!1)},mdxType:"Button"},"DISAGREE"),(0,l.kt)(s.Button,{variant:"text",onClick:function(){return n(!1)},mdxType:"Button"},"AGREE")))))},T=function(){var e=(0,i.useState)(!1),t=e[0],n=e[1];return(0,l.kt)(i.Fragment,null,(0,l.kt)(r.i,{mdxType:"Wrapper"},(0,l.kt)(s.Button,{variant:"outlined",onClick:function(){return n(!0)},mdxType:"Button"},"OPEN DRAGGABLE DIALOG"),(0,l.kt)(s.Dialog,{open:t,onClose:function(){return console.log("Dialog Closed")},onBackdropClick:function(){return n(!1)},draggable:!0,dragOptions:{handle:"#title"},mdxType:"Dialog"},(0,l.kt)(s.DialogTitle,{dragFor:"title",mdxType:"DialogTitle"},"Use Google's location service?"),(0,l.kt)(s.DialogContent,{mdxType:"DialogContent"},(0,l.kt)(s.DialogContentText,{mdxType:"DialogContentText"},"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.")),(0,l.kt)(s.DialogActions,{mdxType:"DialogActions"},(0,l.kt)(s.Button,{variant:"text",onClick:function(){return n(!1)},mdxType:"Button"},"DISAGREE"),(0,l.kt)(s.Button,{variant:"text",onClick:function(){return n(!1)},mdxType:"Button"},"AGREE")))))},x={toc:m,Default:p,ConfirmDialog:k,ScrollDialog:D,FullScreen:C,FullWidth:f,Draggable:T};function v(e){var t=e.components,n=(0,a.Z)(e,u);return(0,l.kt)("wrapper",(0,o.Z)({},x,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"dialog-\u5bf9\u8bdd\u6846"},"Dialog \u5bf9\u8bdd\u6846"),(0,l.kt)("p",null,"\u5bf9\u8bdd\u6846\u662f modal \u7a97\u4f53\u7684\u4e00\u79cd\u7c7b\u578b\uff0c\u5b83\u901a\u5e38\u5728\u5e94\u7528\u7a0b\u5e8f\u5185\u5bb9\u4e4b\u524d\u5448\u73b0\uff0c\u6765\u63d0\u4f9b\u4e00\u4e9b\u5173\u952e\u4fe1\u606f\uff0c\u6216\u8005\u8981\u6c42\u7528\u6237\u505a\u51fa\u51b3\u7b56\u3002\u5bf9\u8bdd\u6846\u51fa\u73b0\u7684\u65f6\u5019\u4f1a\u7981\u7528\u5e94\u7528\u7a0b\u5e8f\u7684\u6240\u6709\u529f\u80fd\uff0c\u53ea\u6709\u88ab\u786e\u8ba4\u3001\u88ab\u53d6\u6d88\u6216\u5df2\u91c7\u53d6\u5176\u4ed6\u5fc5\u8981\u7684\u64cd\u4f5c\u65f6\uff0c\u5bf9\u8bdd\u6846\u4f1a\u4ece\u5c4f\u5e55\u4e2d\u6d88\u5931\u3002"),(0,l.kt)("p",null,"\u5bf9\u8bdd\u6846\u4f1a\u5e26\u6709\u76ee\u7684\u6027\u5730\u6253\u65ad\u5de5\u4f5c\u6d41\u7a0b\uff0c\u6240\u4ee5\u8bf7\u60a8\u8c28\u614e\u4f7f\u7528\u3002"),(0,l.kt)("h2",{id:"basic-dialog"},"Basic dialog"),(0,l.kt)("p",null,"Simple dialogs can provide additional details or actions."),(0,l.kt)("p",null,"Touch mechanics:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Choosing an option immediately commits the option and closes the menu"),(0,l.kt)("li",{parentName:"ul"},"Touching outside of the dialog, or pressing Back ( ",(0,l.kt)("inlineCode",{parentName:"li"},"ESC")," ) keys, cancels the action and closes the dialog")),(0,l.kt)(p,{mdxType:"Default"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'import React, { useState } from "react";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from "maze-ui";\n\nexport const MyDialog = () => {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <Button variant="outlined" onClick={() => setOpen(true)}>\n        OPEN DIALOG\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => {\n          console.log("Dialog Closed");\n          setOpen(false);\n        }}\n        onBackdropClick={() => setOpen(false)}\n        exitOnEsc\n      >\n        <DialogTitle>{"Use Google\'s location service?"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button variant="text" onClick={() => setOpen(false)}>\n            DISAGREE\n          </Button>\n          <Button variant="text" onClick={() => setOpen(false)}>\n            AGREE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n')),(0,l.kt)("h2",{id:"confirm-dialog"},"Confirm dialog"),(0,l.kt)("p",null,"Dialogs allow users to fill out form fields."),(0,l.kt)(k,{mdxType:"ConfirmDialog"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'import React, { useState, useCallback, useRef } from "react";\nimport {\n  Grid,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Label,\n} from "maze-ui";\n\nexport const MyDialog = () => {\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState("");\n  const resRef = useRef();\n  const handleSelect = useCallback((e) => {\n    resRef.current = e.target.value;\n  }, []);\n\n  return (\n    <>\n      <Grid spacing={2}>\n        <Button variant="outlined" onClick={() => setOpen(true)}>\n          DJ MAG VOTE 2022\n        </Button>\n        <Dialog\n          open={open}\n          onClose={() => console.log("Dialog Closed")}\n          width="350px"\n        >\n          <DialogTitle>{"Best DJ in the world"}</DialogTitle>\n          <DialogContent dividers>\n            <RadioGroup\n              name="dj"\n              size="medium"\n              orientation="vertical"\n              spacing={15}\n              onChange={handleSelect}\n            >\n              <Radio value="Martin Garrix" label="Martin Garrix" />\n              <Radio value="Mike Williams" label="Mike Williams" />\n              <Radio value="Brooks" label="Brooks" />\n            </RadioGroup>\n          </DialogContent>\n          <DialogActions>\n            <Button variant="text" onClick={() => setOpen(false)}>\n              CANCEL\n            </Button>\n            <Button\n              variant="text"\n              onClick={() => {\n                setResult(resRef.current);\n                setOpen(false);\n              }}\n            >\n              SUBMIT\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Label>Selection: {result}</Label>\n      </Grid>\n    </>\n  );\n};\n')),(0,l.kt)("h2",{id:"scrolling-long-content"},"Scrolling long content"),(0,l.kt)("p",null,"When dialogs become too long for the user's viewport or device, they scroll."),(0,l.kt)(D,{mdxType:"ScrollDialog"}),(0,l.kt)("h2",{id:"full-screen-dialogs"},"Full-screen dialogs"),(0,l.kt)("p",null,"When the ",(0,l.kt)("inlineCode",{parentName:"p"},"fullScreen")," prop is true, the dialog will show in full-screen."),(0,l.kt)(C,{mdxType:"FullScreen"}),(0,l.kt)("h2",{id:"full-width-dialogs"},"Full-width dialogs"),(0,l.kt)("p",null,"When the ",(0,l.kt)("inlineCode",{parentName:"p"},"fullWidth")," prop is true, the dialog will adapt to the screen maximum width."),(0,l.kt)(f,{mdxType:"FullWidth"}),(0,l.kt)("h2",{id:"draggable-dialog"},"Draggable Dialog"),(0,l.kt)("p",null,"You can create a draggable dialog by using ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"https://github.com/mzabriskie/react-draggable"},"react-draggable")),"."),(0,l.kt)("p",null,"You can use ",(0,l.kt)("inlineCode",{parentName:"p"},"draggable")," to enable drag behavior on whole dialog, then set the ",(0,l.kt)("inlineCode",{parentName:"p"},"dragOptions")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"dragFor")," to specify the components that can be dragged."),(0,l.kt)(T,{mdxType:"Draggable"}),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'import React, { useState } from "react";\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from "maze-ui";\n\nexport const Draggable = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Button variant="outlined" onClick={() => setOpen(true)}>\n        OPEN DRAGGABLE DIALOG\n      </Button>\n      <Dialog\n        open={open}\n        onClose={() => console.log("Dialog Closed")}\n        onBackdropClick={() => setOpen(false)}\n        draggable\n        dragOptions={{\n          handle: "#title",\n        }}\n      >\n        <DialogTitle dragFor="title">\n          {"Use Google\'s location service?"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button variant="text" onClick={() => setOpen(false)}>\n            DISAGREE\n          </Button>\n          <Button variant="text" onClick={() => setOpen(false)}>\n            AGREE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n')))}v.isMDXComponent=!0}}]);