"use strict";(self.webpackChunkmaze_doc=self.webpackChunkmaze_doc||[]).push([[477],{7326:function(t,o,e){e.r(o),e.d(o,{frontMatter:function(){return s},contentTitle:function(){return d},metadata:function(){return m},toc:function(){return c},default:function(){return T}});var n=e(7462),i=e(3366),a=(e(7294),e(3905)),l=e(6923),p=e(321),r=["components"],s={sidebar_position:8},d="Tooltip",m={unversionedId:"components/Tooltip",id:"components/Tooltip",isDocsHomePage:!1,title:"Tooltip",description:"When activated, Tooltips display a text label identifying an element, such as a description of its function.",source:"@site/docs/components/Tooltip.mdx",sourceDirName:"components",slug:"/components/Tooltip",permalink:"/maze-doc/docs/components/Tooltip",editUrl:"https://github.com/matozz/maze-doc/blob/master/docs/components/Tooltip.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Grid",permalink:"/maze-doc/docs/components/Grid"},next:{title:"Playground",permalink:"/maze-doc/docs/playGround"}},c=[{value:"Basic tooltip",id:"basic-tooltip",children:[],level:2},{value:"Positioned tooltips",id:"positioned-tooltips",children:[],level:2},{value:"Arrow tooltips",id:"arrow-tooltips",children:[],level:2},{value:"Customization",id:"customization",children:[],level:2},{value:"Disabled elements",id:"disabled-elements",children:[],level:2}],u={toc:c};function T(t){var o=t.components,e=(0,i.Z)(t,r);return(0,a.kt)("wrapper",(0,n.Z)({},u,e,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tooltip"},"Tooltip"),(0,a.kt)("p",null,"When activated, Tooltips display a text label identifying an element, such as a description of its function."),(0,a.kt)("h2",{id:"basic-tooltip"},"Basic tooltip"),(0,a.kt)(p.i,{mdxType:"Wrapper"},(0,a.kt)(l.Tooltip,{title:"Show the full content",mdxType:"Tooltip"},(0,a.kt)(l.Button,{variant:"text",mdxType:"Button"},"Show"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tooltip title="Show the full content">\n  <Button variant="text">Show</Button>\n</Tooltip>\n')),(0,a.kt)("h2",{id:"positioned-tooltips"},"Positioned tooltips"),(0,a.kt)("p",null,"The Tooltip has 4 placements choice (will support 12 placements in future releases). They don't have directional arrows; instead, they rely on motion emanating from the source to convey direction."),(0,a.kt)(p.i,{mdxType:"Wrapper"},(0,a.kt)(l.Grid,{alignItems:"center",direction:"column",spacing:4,mdxType:"Grid"},(0,a.kt)(l.Tooltip,{title:"Top",position:"top",mdxType:"Tooltip"},(0,a.kt)(l.Button,{variant:"text",mdxType:"Button"},"Top")),(0,a.kt)(l.Grid,{spacing:6,mdxType:"Grid"},(0,a.kt)(l.Tooltip,{title:"Left",position:"left",mdxType:"Tooltip"},(0,a.kt)(l.Button,{variant:"text",mdxType:"Button"},"Left")),(0,a.kt)(l.Tooltip,{title:"Right",position:"right",mdxType:"Tooltip"},(0,a.kt)(l.Button,{variant:"text",mdxType:"Button"},"Right"))),(0,a.kt)(l.Tooltip,{title:"Bottom",position:"bottom",mdxType:"Tooltip"},(0,a.kt)(l.Button,{variant:"text",mdxType:"Button"},"Bottom")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Grid alignItems="center" direction="column" spacing={4}>\n  <Tooltip title="Top" position="top">\n    <Button variant="text">Top</Button>\n  </Tooltip>\n  <Grid spacing={6}>\n    <Tooltip title="Left" position="left">\n      <Button variant="text">Left</Button>\n    </Tooltip>\n    <Tooltip title="Right" position="right">\n      <Button variant="text">Right</Button>\n    </Tooltip>\n  </Grid>\n  <Tooltip title="Bottom" position="bottom">\n    <Button variant="text">Bottom</Button>\n  </Tooltip>\n</Grid>\n')),(0,a.kt)("h2",{id:"arrow-tooltips"},"Arrow tooltips"),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"arrow")," prop to give your tooltip an arrow indicating which element it refers to."),(0,a.kt)(p.i,{mdxType:"Wrapper"},(0,a.kt)(l.Grid,{alignItems:"center",spacing:2,mdxType:"Grid"},(0,a.kt)(l.Tooltip,{title:"Top",position:"top",arrow:!0,mdxType:"Tooltip"},(0,a.kt)(l.Button,{variant:"text",mdxType:"Button"},"Top")),(0,a.kt)(l.Tooltip,{title:"Bottom",position:"bottom",arrow:!0,mdxType:"Tooltip"},(0,a.kt)(l.Button,{variant:"text",mdxType:"Button"},"Bottom")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Grid alignItems="center" spacing={2}>\n  <Tooltip title="Top" position="top" arrow>\n    <Button variant="text">Top</Button>\n  </Tooltip>\n  <Tooltip title="Bottom" position="bottom" arrow>\n    <Button variant="text">Bottom</Button>\n  </Tooltip>\n</Grid>\n')),(0,a.kt)("h2",{id:"customization"},"Customization"),(0,a.kt)("p",null,"Here are the example of customizing the component. You can customize the tooltip content by passing elements to the ",(0,a.kt)("inlineCode",{parentName:"p"},"title")," prop."),(0,a.kt)(p.i,{mdxType:"Wrapper"},(0,a.kt)(l.Tooltip,{title:(0,a.kt)("div",null,"Tooltip with HTML",(0,a.kt)("br",null),(0,a.kt)("em",null,"And here's")," ",(0,a.kt)("b",null,"some")," ",(0,a.kt)("u",null,"amazing content"),"."," ","It's very engaging. Right?"),containerStyle:{background:"#f5f5f5",color:"black",border:"#dbdbdb 1px solid",padding:10,fontSize:14},arrowStyle:{color:"#dbdbdb"},position:"bottom",arrow:!0,mdxType:"Tooltip"},(0,a.kt)(l.Button,{variant:"text",mdxType:"Button"},"HTML"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tooltip\n  title={\n    <div>\n      {"Tooltip with HTML"}\n      <br />\n      <em>{"And here\'s"}</em> <b>{"some"}</b> <u>{"amazing content"}</u>.{" "}\n      {"It\'s very engaging. Right?"}\n    </div>\n  }\n  containerStyle={{\n    background: "#f5f5f5",\n    color: "black",\n    border: "#dbdbdb 1px solid",\n    padding: 10,\n    fontSize: 14,\n  }}\n  arrowStyle={{\n    color: "#dbdbdb",\n  }}\n  position="bottom"\n  arrow\n>\n  <Button variant="text">HTML</Button>\n</Tooltip>\n')),(0,a.kt)("h2",{id:"disabled-elements"},"Disabled elements"),(0,a.kt)("p",null,"By default disabled elements like ",(0,a.kt)("inlineCode",{parentName:"p"},"<button>")," do not trigger user interactions so a ",(0,a.kt)("inlineCode",{parentName:"p"},"Tooltip")," will not activate on normal events like hover. To accommodate disabled elements, add a simple wrapper element, such as a ",(0,a.kt)("inlineCode",{parentName:"p"},"span")," and disabled ",(0,a.kt)("inlineCode",{parentName:"p"},"pointerEvents")," on ",(0,a.kt)("inlineCode",{parentName:"p"},"<button>"),"."),(0,a.kt)(p.i,{mdxType:"Wrapper"},(0,a.kt)(l.Tooltip,{title:"You don't have the permission to activate",position:"bottom",arrow:!0,mdxType:"Tooltip"},(0,a.kt)("span",null,(0,a.kt)(l.Button,{variant:"text",disabled:!0,style:{pointerEvents:"none"},mdxType:"Button"},"Activate")))),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"By default, we add the ",(0,a.kt)("inlineCode",{parentName:"p"},"not-allowed")," cursor style to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Input")," element, such as ",(0,a.kt)("inlineCode",{parentName:"p"},"<Button>"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"<Radio>")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"<CheckBox>"),", which remain the disabled button to have pointer-events. So simply add set there pointerEvents to ",(0,a.kt)("inlineCode",{parentName:"p"},'"none"')," can solve this issue."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<Tooltip\n  title="You don\'t have the permission to activate"\n  position="bottom"\n  arrow\n>\n  <span>\n    <Button variant="text" disabled style={{ pointerEvents: "none" }}>\n      Activate\n    </Button>\n  </span>\n</Tooltip>\n')))}T.isMDXComponent=!0}}]);